{
	// Place your 101kerja-admin-web workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.

	"Taable Columns": {
		"scope": "typescriptreact",
		"prefix": "gencomtablecolumns",
		"body": [
			"\"use client\";",
			"",
			"import { DataTableColumnHeader, DataTableRowActions } from \"@/components/common/data-table\";",
			"import type { UserFragment } from \"@/graphql\";",
			"import { parseDateTime } from \"@/lib/date\";",
			"import type { Column } from \"@/types/table.types\";",
			"",
			"type DataType = ${1:User}Fragment;",
			"interface Props {",
			"  onEdit: (data: DataType) => void;",
			"  onDelete: (data: DataType) => void;",
			"}",
			"export const columns = ({ onEdit, onDelete }: Props): Column<DataType>[] => {",
			"  return [",
			"    {",
			"      accessorKey: \"name\",",
			"      header: ({ column }) => <DataTableColumnHeader column={column} title=\"Name\" />,",
			"      cell: ({ row }) => {",
			"        return row.original.name;",
			"      },",
			"    },",
			"    {",
			"      accessorKey: \"createdAt\",",
			"      size: 200,",
			"      header: ({ column }) => <DataTableColumnHeader column={column} title=\"Created At\" />,",
			"      cell: ({ row }) => <span>{parseDateTime(row.original.createdAt)}</span>,",
			"    },",
			"    {",
			"      id: \"actions\",",
			"      size: 100,",
			"      cell: ({ row }) => (",
			"        <DataTableRowActions<DataType>",
			"          center",
			"          onEdit={() => {",
			"            onEdit(row.original);",
			"          }}",
			"          onDelete={() => {",
			"            onDelete(row.original);",
			"          }}",
			"        />",
			"      ),",
			"    },",
			"  ];",
			"};",
			"$2"
		],
		"description": "Generate table columns"
	}
}